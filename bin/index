#!/usr/bin/env node

var fs = require('fs')
var path = require('path')
var commander = require('commander')
var colorful = require('colorful')
var utilx = require('utilx')

var pkg = require('../package')

commander
  .description(pkg.description)
  .option('-v, --version',      'output version number')
  .option('-c, --complex',      'create docs for complex project')
  .on('version', function() {
    console.log('\n  ' + colorful.cyan(pkg.version) + '\n')
    process.exit(0)
  })
  .helpInformation = utilx.cGetHelp(pkg)

  
commander.parse(process.argv)


var type = utilx.cGetCfg(commander).complex ? 'complex' : 'simple'
var templDir = path.join(__dirname, '..', 'templates', type)

copy(templDir, process.cwd())
console.log('\nCreate doc files successfully.\n')


function copy(fromRoot, toRoot/*private param*/, fromDir) {
  var fromDir = fromDir || fromRoot
  var relPath = path.relative(fromRoot, fromDir)
  var toDir = path.join(toRoot, relPath)
  
  var names = fs.readdirSync(fromDir)
  names.forEach(function(name){
    var fromPath = path.join(fromDir, name)
    var toPath = path.join(toDir, name)
    
    if (utilx.isExistedFile(fromPath)) {
      fs.writeFileSync(toPath, fs.readFileSync(fromPath))
      
    } else {
      if (!utilx.isExistedDir(toPath)) {
        fs.mkdirSync(toPath)
      }
      copy(fromRoot, toRoot, fromPath)
    }
  })
}







